A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\proiect2.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE proiect2.a51 SET(SMALL) DEBUG PRINT(.\Listings\proiect2.lst) OBJECT(.\O
                      bjects\proiect2.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     org 0000h
                       2             
                       3     ;       main:
                       4     ;mov a, #38h
                       5     ;acall cmnd
                       6     ;mov a, #0fh
                       7     ;acall cmnd
                       8     ;mov a, #01h
                       9     ;acall cmnd
                      10     ;mov a, #81h
                      11     ;acall cmnd
                      12     ;repetare:
                      13     ;mov a, 'H'
                      14     ;acall dataa
                      15     ;acall delay
                      16     ;mov a, 'e';
                      17     ; Room thermostat based on the 8051 microcontroller.
                      18     ; Temperature sensor : DS18B20
                      19     ; Developed by Stelian Saracut
                      20     ; 2018
                      21     ;
                      22     
                      23     ; LCD pins
  00A0                24     LCD_PORT equ P2
  00B2                25     LCD_E equ P3.2
  00B0                26     LCD_RS equ P3.0
                      27     
                      28     ; OneWire pin
  0090                29     PIN_1W equ  P1.0
                      30     
                      31     ; Heater relay pin
  00B7                32     PIN_RELAY equ P3.7
                      33     
                      34     ; Keyboard pins
  00B5                35     KEY_DEC equ P3.5
  00B4                36     KEY_INC equ P3.4
                      37     
                      38     ; Timer consts for generic 8051 for 1 ms delay
  0017                39     INIT_TL0 equ 017h
  00FC                40     INIT_TH0 equ 0FCh
                      41     
                      42     ; Sensor data buffer start address
  0030                43     SENSOR_DATA_BUFFER equ 030h
                      44     
                      45     ; Set temperature buffer start address
  0032                46     SET_TEMP_BUFFER equ 032h
                      47     
                      48     ; Display buffer start address
  0034                49     DISP_BUFFER_L1 equ 034h
  0045                50     DISP_BUFFER_L2 equ 045h
                      51     
0000                  52     org 0000h
                      53     
0000 8012             54     sjmp main
                      55     
0002                  56     text1:
0002 54202020         57     db "T     = ", 0
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     2

0006 20203D20                
000A 00                      
000B                  58     text2:
000B 53657420         59     db "Set T = ", 0
000F 54203D20                
0013 00                      
                      60     
0014                  61     main:
                      62     
                      63     ; I/O pins initialization
0014 75A000           64     mov LCD_PORT, #0
0017 C2B2             65     clr LCD_E
0019 C2B0             66     clr LCD_RS
001B C2B7             67     clr PIN_RELAY
001D D2B5             68     setb KEY_DEC
001F D2B4             69     setb KEY_INC
                      70     
                      71     ; Set temperature buffer initialization (21 degrees)
                      72     ; Set temperature is represented as raw sensor data
0021 7832             73     mov r0, #SET_TEMP_BUFFER
0023 7650             74     mov @r0, #01010000b
0025 08               75     inc r0
0026 7601             76     mov @r0, #00000001b
                      77     
                      78     ; Timer initialization
                      79     ; Timer0 used for delay
0028 438911           80     orl TMOD, #00010001b
002B 5389FD           81     anl TMOD, #11111101b
002E 758000           82     mov P0, #0
                      83     
                      84     ; Display initialization
0031 314B             85     acall lcd_init
                      86     
0033                  87     main_loop:
0033 11F1             88             acall read_sensor
                      89             ; copy sensor data to buffer
0035 7830             90             mov r0, #SENSOR_DATA_BUFFER
0037 E9               91             mov a, r1
0038 F6               92             mov @r0, a
0039 EA               93             mov a, r2
003A 08               94             inc r0
003B F6               95             mov @r0, a
                      96     
                      97              ; clear LCD
003C 7401             98             mov a, #01h
003E C2B0             99             clr LCD_RS
0040 310C            100             acall lcd_send_byte
                     101     
                     102             ; Copy constant text for line 1
0042 7834            103             mov r0, #DISP_BUFFER_L1
0044 900002          104             mov dptr, #text1
0047 D2B0            105             setb LCD_RS
0049 3162            106             acall lcd_copy_buffer
                     107     
                     108             ; Convert sensor data to ASCII
004B 3177            109             acall convert_int_temp
004D 31A7            110             acall to_ascii
004F 31B6            111             acall load_int_disp_buffer
                     112     
0051 319F            113             acall convert_frac_temp
0053 31A7            114             acall to_ascii
0055 31C7            115             acall load_frac_disp_buffer
0057 7600            116             mov @r0, #0
                     117     
                     118             ; Display line 1
0059 7834            119             mov r0, #DISP_BUFFER_L1
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     3

005B 316C            120             acall lcd_send_chars_ram ; display current temperature
                     121     
                     122             ; Load set temperature to registers for conversion
005D 7832            123             mov r0, #SET_TEMP_BUFFER
005F E6              124             mov a, @r0
0060 F9              125             mov r1, a
0061 08              126             inc r0
0062 E6              127             mov a, @r0
0063 FA              128             mov r2, a
                     129     
                     130             ; Move to line 2
0064 74C0            131             mov a, #0C0h
0066 C2B0            132             clr LCD_RS
0068 310C            133             acall lcd_send_byte
                     134     
                     135             ; Copy constant text for line 1
006A 7845            136             mov r0, #DISP_BUFFER_L2
006C 90000B          137             mov dptr, #text2
006F 3162            138             acall lcd_copy_buffer
                     139     
                     140             ; Convert set temperature to ASCII
0071 3177            141             acall convert_int_temp
0073 31A7            142             acall to_ascii
0075 31B6            143             acall load_int_disp_buffer
                     144     
0077 319F            145             acall convert_frac_temp
0079 31A7            146             acall to_ascii
007B 31C7            147             acall load_frac_disp_buffer
007D 7600            148             mov @r0, #0
                     149     
                     150             ; Display line 2
007F 7845            151             mov r0, #DISP_BUFFER_L2
0081 316C            152             acall lcd_send_chars_ram
                     153     
                     154             ; Read keyboard
0083 31D0            155             acall get_keys
                     156             
                     157             ; Compare set and current temperature and enable relay if
                     158             ; current temperature is lower
0085 5106            159             acall compare_temp
                     160     
                     161             ; Wait 100 ms
0087 7B64            162             mov r3, #100
0089                 163             delay:
0089 118F            164                     acall delay_1ms
008B DBFC            165                     djnz r3, delay
008D 80A4            166             sjmp main_loop
                     167     ; end of main loop
                     168     
                     169     
                     170     
008F                 171     delay_1ms:
                     172             ; load initial timer values
008F 758A17          173             mov TL0, #INIT_TL0
0092 758CFC          174             mov TH0, #INIT_TH0
                     175             ; enable timer
0095 D28C            176             setb TR0
                     177             ; wait for overflow
0097                 178             wait:
0097 308DFD          179                     jnb TF0, wait
                     180             ; disable timer
009A C28C            181             clr TR0
                     182             ; clear overflow flag
009C C28D            183             clr TF0
009E 22              184             ret
                     185     
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     4

009F                 186     simple_delay:
009F DFFE            187             djnz r7, simple_delay
00A1 22              188             ret
                     189     
00A2                 190     init_1W:
00A2 D290            191             setb PIN_1W
00A4 7F30            192             mov r7, #48
00A6 119F            193             acall simple_delay
                     194     
00A8 C290            195             clr PIN_1W
                     196     
00AA 7FB4            197             mov r7, #180
00AC 119F            198             acall simple_delay
00AE 7FB4            199             mov r7, #180
00B0 119F            200             acall simple_delay
                     201     
00B2 D290            202             setb PIN_1W
                     203     
00B4 7F54            204             mov r7, #84
00B6 119F            205             acall simple_delay
                     206     
00B8 309000          207             jnb PIN_1W, init_error
00BB                 208             init_error:
00BB 430601          209                     orl 06h, #1
00BE 8003            210                     jmp init_end
00C0 5306FE          211             anl 06h, #0FEh
00C3                 212             init_end:
00C3 7F14            213             mov r7, #20
00C5 119F            214             acall simple_delay
00C7 22              215             ret
                     216     
                     217     ; Result in accumulator
00C8                 218     read_byte_1W:
00C8 7E08            219             mov r6, #8
00CA E4              220             clr a
00CB                 221             start_read:
00CB C290            222                     clr PIN_1W
00CD C3              223                     clr C
00CE 13              224                     rrc a
00CF D290            225                     setb PIN_1W
00D1 309002          226                     jnb PIN_1W, read_end
00D4 4480            227                     orl a, #080h
00D6                 228                     read_end:
00D6 7F1E            229                             mov r7, #30
00D8 119F            230                             acall simple_delay
00DA DEEF            231                     djnz r6, start_read
00DC 22              232             ret
                     233     
                     234     ; Write byte from accumulator
00DD                 235     write_byte_1W:
00DD 7E08            236             mov r6, #8
00DF                 237             start_write:
00DF C290            238                     clr PIN_1W
00E1 13              239                     rrc a
00E2 9290            240                     mov PIN_1W, C
00E4 7F2D            241                     mov r7, #45
00E6 119F            242                     acall simple_delay
00E8 D290            243                     setb PIN_1W
00EA DEF3            244                     djnz r6, start_write
00EC 7F1E            245             mov r7, #30
00EE 119F            246             acall simple_delay
00F0 22              247             ret
                     248     
                     249     ; Read temperature from DS18B20 sensor
00F1                 250     read_sensor:
00F1 11A2            251             acall init_1W
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     5

                     252             ; TODO : handle error
00F3 74CC            253             mov a, #0CCh ; skip ROM
00F5 11DD            254             acall write_byte_1W
00F7 7444            255             mov a, #044h ; convert T
00F9 11DD            256             acall write_byte_1W
00FB 11A2            257             acall init_1W
00FD 74CC            258             mov a, #0CCh ; skip ROM
00FF 11DD            259             acall write_byte_1W
0101 74BE            260             mov a, #0BEh ; read Scratchpad
0103 11DD            261             acall write_byte_1W
0105 11C8            262             acall read_byte_1W
0107 F9              263             mov r1, a
0108 11C8            264             acall read_byte_1W
010A FA              265             mov r2, a
010B 22              266             ret
                     267     
010C                 268     lcd_send_byte:
010C 53A00F          269             anl LCD_PORT, #0Fh
010F FF              270             mov r7, a
0110 54F0            271             anl a, #0F0h
0112 85A0F0          272             mov b, LCD_PORT
0115 53F00F          273             anl b, #0Fh
0118 45F0            274             orl a, b
011A F5A0            275             mov LCD_PORT, a
011C EF              276             mov a, r7
011D D2B2            277             setb LCD_E
                     278     
011F 118F            279             acall delay_1ms
                     280     
0121 C2B2            281             clr LCD_E
                     282     
0123 7F04            283             mov r7, #4
0125                 284             lcd_cmd_wait:
0125 118F            285                     acall delay_1ms
0127 DFFC            286                     djnz r7, lcd_cmd_wait
                     287     
0129 53A00F          288             anl LCD_PORT, #0Fh
012C 7F04            289             mov r7, #4
012E                 290             lcd_shift:
012E C3              291                     clr c
012F 33              292                     rlc a
0130 DFFC            293                     djnz r7, lcd_shift
0132 54F0            294             anl a, #0F0h
0134 85A0F0          295             mov b, LCD_PORT
0137 53F00F          296             anl b, #0Fh
013A 45F0            297             orl a, b
013C F5A0            298             mov LCD_PORT, a
013E D2B2            299             setb LCD_E
                     300     
0140 118F            301             acall delay_1ms
                     302     
0142 C2B2            303             clr LCD_E
0144 7F04            304             mov r7, #4
0146                 305             lcd_cmd_wait2:
0146 118F            306                     acall delay_1ms
0148 DFFC            307                     djnz r7, lcd_cmd_wait2
014A 22              308             ret
                     309     
014B                 310     lcd_init:
014B C2B0            311             clr LCD_RS
014D 7402            312             mov a, #02h ; 4 bit mode
014F 310C            313             acall lcd_send_byte
0151 7428            314             mov a, #028h ; 5x7 chars
0153 310C            315             acall lcd_send_byte
0155 740E            316             mov a, #0Eh ; cursor on
0157 310C            317             acall lcd_send_byte
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     6

0159 7401            318             mov a, #01h ; clear
015B 310C            319             acall lcd_send_byte
015D 7480            320             mov a, #080h ; move cursor to first position
015F 310C            321             acall lcd_send_byte
0161 22              322             ret
                     323     
                     324     ; Copies data from code memory pointed by dptr to RAM pointed by r0
                     325     ; Stops at null terminator
0162                 326     lcd_copy_buffer:
0162                 327             lcd_copy_loop:
0162 E4              328                     clr a
0163 93              329                     movc a, @a+dptr
0164 6005            330                     jz lcd_copy_stop
0166 F6              331                     mov @r0, a
0167 08              332                     inc r0
0168 A3              333                     inc dptr
0169 80F7            334                     sjmp lcd_copy_loop
016B                 335             lcd_copy_stop:
016B 22              336             ret
                     337     
                     338     ; Prints data pointed by r0 on LCD
                     339     ; Stops at null terminator
016C                 340     lcd_send_chars_ram:
016C D2B0            341             setb LCD_RS
016E                 342             lcd_send_chars_ram_loop:
016E E6              343                     mov a, @r0
016F 6005            344                     jz lcd_send_ram_stop
0171 310C            345                     acall lcd_send_byte
0173 08              346                     inc r0
0174 80F8            347                     sjmp lcd_send_chars_ram_loop
0176                 348             lcd_send_ram_stop:
0176 22              349             ret
                     350     
                     351     ; Raw sensor data from r0 and r1 is converted to absolute value
                     352     ; of temperature (integer part only) stored in a
                     353     ; if temperature is negative, PSW^1 is set
0177                 354     convert_int_temp:
0177 EA              355             mov a, r2
0178 5480            356             anl a, #080h
017A C2D1            357             clr PSW^1
017C 7002            358             jnz conv_int_neg_temp
017E 800C            359             sjmp conv_int_pos_temp
0180                 360             conv_int_neg_temp:
0180 D2D1            361             setb PSW^1 ; used to display '-'
0182 E9              362             mov a, r1
0183 F4              363             cpl a
0184 C3              364             clr c
0185 04              365             inc a
0186 F9              366             mov r1, a
0187 EA              367             mov a, r2
0188 F4              368             cpl a
0189 3400            369             addc a, #0
018B FA              370             mov r2, a
018C                 371             conv_int_pos_temp:
018C EA              372             mov a, r2
018D 7B04            373             mov r3, #4
018F                 374             convert_int_temp_loop:
018F C3              375                     clr c
0190 33              376                     rlc a
0191 DBFC            377                     djnz r3, convert_int_temp_loop
0193 F5F0            378             mov b, a
0195 E9              379             mov a, r1
0196 7B04            380             mov r3, #4
0198                 381             convert_int_temp_loop2:
0198 C3              382                     clr c
0199 13              383                     rrc a
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     7

019A DBFC            384                     djnz r3, convert_int_temp_loop2
019C 45F0            385             orl a, b
019E 22              386             ret
                     387     
                     388     ; Raw sensor data from r0 is converted to fractional part of temperature
                     389     ; with two decimal digits stored in a
019F                 390     convert_frac_temp:
019F E9              391             mov a, r1
01A0 540F            392             anl a, #0Fh
01A2 75F006          393             mov b, #6
01A5 A4              394             mul ab
01A6 22              395             ret
                     396     
                     397     ; Values in a and b are converted to ascii by adding '0'
01A7                 398     to_ascii:
01A7 75F00A          399             mov b, #10
01AA 84              400             div ab
01AB 2430            401             add a, #'0'
01AD FF              402             mov r7, a
01AE E5F0            403             mov a, b
01B0 2430            404             add a, #'0'
01B2 F5F0            405             mov b, a
01B4 EF              406             mov a, r7
01B5 22              407             ret
                     408     
                     409     ; Stores integer temperature part in display buffer
01B6                 410     load_int_disp_buffer:
01B6 20D102          411             jb PSW^1, disp_minus
01B9 8006            412             sjmp skip
01BB                 413             disp_minus:
01BB FB              414             mov r3, a
01BC 742D            415             mov a, #'-'
01BE F6              416             mov @r0, a
01BF 08              417             inc r0
01C0 EB              418             mov a, r3
01C1                 419             skip:
01C1 F6              420             mov @r0, a
01C2 08              421             inc r0
01C3 A6F0            422             mov @r0, b
01C5 08              423             inc r0
01C6 22              424             ret
                     425     
                     426     ; Stores fractional part in display buffer
01C7                 427     load_frac_disp_buffer:
01C7 762E            428             mov @r0, #'.'
01C9 08              429             inc r0
01CA F6              430             mov @r0, a
01CB 08              431             inc r0
01CC A6F0            432             mov @r0, b
01CE 08              433             inc r0
01CF 22              434             ret
                     435     
                     436     ; Debounces buttons and sets a to 1 if KEY_DEC is pressed
                     437     ;                                 2 if KEY_INC is pressed
                     438     ;                                 3 if both keys are pressed
01D0                 439     get_keys:
01D0 D2B4            440             setb KEY_INC
01D2 D2B5            441             setb KEY_DEC
01D4 20B416          442             jb KEY_INC, get_key_dec
                     443             
                     444             ; Increase temperature key pressed
01D7 7B0A            445             mov r3, #10
01D9                 446             delay_inc:
01D9 118F            447                     acall delay_1ms
01DB DBFC            448                     djnz r3, delay_inc
01DD 20B425          449             jb KEY_INC, get_key_end
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     8

01E0 7832            450             mov r0, #SET_TEMP_BUFFER
01E2 E6              451             mov a, @r0
01E3 C3              452             clr c
01E4 2408            453             add a, #8
01E6 F6              454             mov @r0, a
01E7 08              455             inc r0
01E8 E6              456             mov a, @r0
01E9 3400            457             addc a, #0
01EB F6              458             mov @r0, a
01EC 22              459             ret
01ED                 460             get_key_dec:
01ED 20B515          461             jb KEY_DEC, get_key_end
                     462             
                     463             ; Decrease temperature key pressed
01F0 7B0A            464             mov r3, #10
01F2                 465             delay_dec:
01F2 118F            466                     acall delay_1ms
01F4 DBFC            467                     djnz r3, delay_dec
01F6 20B50C          468             jb KEY_DEC, get_key_end
01F9 7832            469             mov r0, #SET_TEMP_BUFFER
01FB E6              470             mov a, @r0
01FC C3              471             clr c
01FD 9408            472             subb a, #8
01FF F6              473             mov @r0, a
0200 08              474             inc r0
0201 E6              475             mov a, @r0
0202 9400            476             subb a, #0
0204 F6              477             mov @r0, a
0205                 478             get_key_end:
0205 22              479             ret
                     480     
                     481     ; Substract : set - current
0206                 482     compare_temp:
                     483             ; substract lsb
0206 7830            484             mov r0, #SENSOR_DATA_BUFFER
0208 E6              485             mov a, @r0
0209 F5F0            486             mov b, a
020B 7832            487             mov r0, #SET_TEMP_BUFFER
020D E6              488             mov a, @r0
020E C3              489             clr c
020F 95F0            490             subb a, b
                     491             
                     492             ; substract msb
0211 7831            493             mov r0, #SENSOR_DATA_BUFFER+1
0213 E6              494             mov a, @r0
0214 F5F0            495             mov b, a
0216 7833            496             mov r0, #SET_TEMP_BUFFER+1
0218 E6              497             mov a, @r0
0219 95F0            498             subb a, b
021B B3              499             cpl c
021C 92B7            500             mov PIN_RELAY, c
021E 22              501             ret
                     502             
                     503     
                     504     
                     505     ;acall delay
                     506     ;mov a, 'l'
                     507     ;acall dataa
                     508     ;acall delay
                     509     ;mov a, 'l'
                     510     ;acall dataa
                     511     ;acall delay
                     512     ;mov a, 'o'
                     513     ;acall dataa
                     514     ;acall delay
                     515     ;sjmp repetare
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE     9

                     516     
021F                 517     cmnd:
021F F5A0            518     mov p2, a
0221 C2B2            519     clr P3.2
0223 C2B3            520     clr P3.3
0225 D2B4            521     setb P3.4
0227 C2B4            522     clr P3.4
0229 513D            523     acall delaay
022B 513D            524     acall delaay
022D 22              525     ret
                     526     
022E                 527     dataa:
022E F5A0            528     mov p2, a
0230 D2B2            529     setb P3.2
0232 C2B3            530     clr P3.3
0234 D2B4            531     setb P3.4
                     532     
0236 C2B4            533     clr p3.4
0238 513D            534     acall delaay
023A 513D            535     acall delaay
023C 22              536     ret
                     537     
023D                 538     delaay:
023D 7FFF            539     mov r7, #0ffh
023F                 540     repeta:
023F 00              541     nop
0240 00              542     nop
0241 00              543     nop
0242 00              544     nop
0243 00              545     nop
0244 DFF9            546     djnz r7, repeta
0246 00              547     nop
0247 22              548     ret
                     549     end
                                     
                             
                             
                             
                             
                             
                             
                             
                             
                             
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE    10

SYMBOL TABLE LISTING
------ ----- -------


N A M E                  T Y P E  V A L U E   ATTRIBUTES

B . . . . . . . . . . .  D ADDR   00F0H   A   
CMND. . . . . . . . . .  C ADDR   021FH   A   
COMPARE_TEMP. . . . . .  C ADDR   0206H   A   
CONVERT_FRAC_TEMP . . .  C ADDR   019FH   A   
CONVERT_INT_TEMP. . . .  C ADDR   0177H   A   
CONVERT_INT_TEMP_LOOP .  C ADDR   018FH   A   
CONVERT_INT_TEMP_LOOP2.  C ADDR   0198H   A   
CONV_INT_NEG_TEMP . . .  C ADDR   0180H   A   
CONV_INT_POS_TEMP . . .  C ADDR   018CH   A   
DATAA . . . . . . . . .  C ADDR   022EH   A   
DELAAY. . . . . . . . .  C ADDR   023DH   A   
DELAY . . . . . . . . .  C ADDR   0089H   A   
DELAY_1MS . . . . . . .  C ADDR   008FH   A   
DELAY_DEC . . . . . . .  C ADDR   01F2H   A   
DELAY_INC . . . . . . .  C ADDR   01D9H   A   
DISP_BUFFER_L1. . . . .  N NUMB   0034H   A   
DISP_BUFFER_L2. . . . .  N NUMB   0045H   A   
DISP_MINUS. . . . . . .  C ADDR   01BBH   A   
GET_KEYS. . . . . . . .  C ADDR   01D0H   A   
GET_KEY_DEC . . . . . .  C ADDR   01EDH   A   
GET_KEY_END . . . . . .  C ADDR   0205H   A   
INIT_1W . . . . . . . .  C ADDR   00A2H   A   
INIT_END. . . . . . . .  C ADDR   00C3H   A   
INIT_ERROR. . . . . . .  C ADDR   00BBH   A   
INIT_TH0. . . . . . . .  N NUMB   00FCH   A   
INIT_TL0. . . . . . . .  N NUMB   0017H   A   
KEY_DEC . . . . . . . .  B ADDR   00B0H.5 A   
KEY_INC . . . . . . . .  B ADDR   00B0H.4 A   
LCD_CMD_WAIT. . . . . .  C ADDR   0125H   A   
LCD_CMD_WAIT2 . . . . .  C ADDR   0146H   A   
LCD_COPY_BUFFER . . . .  C ADDR   0162H   A   
LCD_COPY_LOOP . . . . .  C ADDR   0162H   A   
LCD_COPY_STOP . . . . .  C ADDR   016BH   A   
LCD_E . . . . . . . . .  B ADDR   00B0H.2 A   
LCD_INIT. . . . . . . .  C ADDR   014BH   A   
LCD_PORT. . . . . . . .  D ADDR   00A0H   A   
LCD_RS. . . . . . . . .  B ADDR   00B0H.0 A   
LCD_SEND_BYTE . . . . .  C ADDR   010CH   A   
LCD_SEND_CHARS_RAM. . .  C ADDR   016CH   A   
LCD_SEND_CHARS_RAM_LOOP  C ADDR   016EH   A   
LCD_SEND_RAM_STOP . . .  C ADDR   0176H   A   
LCD_SHIFT . . . . . . .  C ADDR   012EH   A   
LOAD_FRAC_DISP_BUFFER .  C ADDR   01C7H   A   
LOAD_INT_DISP_BUFFER. .  C ADDR   01B6H   A   
MAIN. . . . . . . . . .  C ADDR   0014H   A   
MAIN_LOOP . . . . . . .  C ADDR   0033H   A   
P0. . . . . . . . . . .  D ADDR   0080H   A   
P1. . . . . . . . . . .  D ADDR   0090H   A   
P2. . . . . . . . . . .  D ADDR   00A0H   A   
P3. . . . . . . . . . .  D ADDR   00B0H   A   
PIN_1W. . . . . . . . .  B ADDR   0090H.0 A   
PIN_RELAY . . . . . . .  B ADDR   00B0H.7 A   
PSW . . . . . . . . . .  D ADDR   00D0H   A   
READ_BYTE_1W. . . . . .  C ADDR   00C8H   A   
READ_END. . . . . . . .  C ADDR   00D6H   A   
READ_SENSOR . . . . . .  C ADDR   00F1H   A   
REPETA. . . . . . . . .  C ADDR   023FH   A   
SENSOR_DATA_BUFFER. . .  N NUMB   0030H   A   
SET_TEMP_BUFFER . . . .  N NUMB   0032H   A   
SIMPLE_DELAY. . . . . .  C ADDR   009FH   A   
A51 MACRO ASSEMBLER  PROIECT2                                                             05/30/2023 20:43:18 PAGE    11

SKIP. . . . . . . . . .  C ADDR   01C1H   A   
START_READ. . . . . . .  C ADDR   00CBH   A   
START_WRITE . . . . . .  C ADDR   00DFH   A   
TEXT1 . . . . . . . . .  C ADDR   0002H   A   
TEXT2 . . . . . . . . .  C ADDR   000BH   A   
TF0 . . . . . . . . . .  B ADDR   0088H.5 A   
TH0 . . . . . . . . . .  D ADDR   008CH   A   
TL0 . . . . . . . . . .  D ADDR   008AH   A   
TMOD. . . . . . . . . .  D ADDR   0089H   A   
TO_ASCII. . . . . . . .  C ADDR   01A7H   A   
TR0 . . . . . . . . . .  B ADDR   0088H.4 A   
WAIT. . . . . . . . . .  C ADDR   0097H   A   
WRITE_BYTE_1W . . . . .  C ADDR   00DDH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
